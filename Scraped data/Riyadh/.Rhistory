data = html_text(data_html)
if (data[4] == ("Full Sun"|"Part Shade")){
data[3] = str_c(data[c(3,4)], collapse = ",")
data = data[-4]
}
if (data[4] == "Full Sun"|"Part Shade"){
data[3] = str_c(data[c(3,4)], collapse = ",")
data = data[-4]
}
data[4] == "Full Sun"
if (data[4] == "Full Sun"|data[4] =="Part Shade"){
data[3] = str_c(data[c(3,4)], collapse = ",")
data = data[-4]
}
data
webpage = read_html(plant_url_all[10])
species_html = html_nodes(webpage, ".detail em")
species = html_text(species_html)
description_html = html_nodes(webpage, ".notestitle+ p")
description = html_text(description_html)
description = gsub("\r\n","",description)
headings_html = html_nodes(webpage, ".attrtitle")
headings = html_text(headings_html)
headings = str_trim(headings)
if (headings[length(headings)] == "Indigenous to the Adelaide Region"){
length(headings) = length(headings) -1
}else{
headings = headings
}
data_html = html_nodes(webpage, ".attrvalue")
data = html_text(data_html)
if (data[5] == "Full Sun"|data[5] =="Part Shade"|data[5] =="Full Shade"){
data[3] = str_c(data[c(3,4,5)], collapse = ", ")
data = data[-c(4,5)]
}else if (data[4] == "Full Sun"|data[4] =="Part Shade"|data[4] =="Full Shade"){
data[3] = str_c(data[c(3,4)], collapse = ", ")
data = data[-4])
}else{
data = data
}
dfprep = data.frame(Species = character(length = length(headings)+1),
trait_name = character(length = length(headings)+1),
value = character(length = length(headings)+1))
dfprep[,1] = as.character(species)
dfprep[,2] = c(headings, "description")
dfprep[,3] = c(data, description)
data_html = html_nodes(webpage, ".attrvalue")
data = html_text(data_html)
if (data[5] == "Full Sun"|data[5] =="Part Shade"|data[5] =="Full Shade"){
data[3] = str_c(data[c(3,4,5)], collapse = ", ")
data = data[-c(4,5)]
}else if (data[4] == "Full Sun"|data[4] =="Part Shade"|data[4] =="Full Shade"){
data[3] = str_c(data[c(3,4)], collapse = ", ")
data = data[-4]
}else{
data = data
}
dfprep = data.frame(Species = character(length = length(headings)+1),
trait_name = character(length = length(headings)+1),
value = character(length = length(headings)+1))
dfprep[,1] = as.character(species)
dfprep[,2] = c(headings, "description")
dfprep[,3] = c(data, description)
View(dfprep)
str_which(plant_url_all, 3096)
str_which("3096", plant_url_all)
str_which(plant_url_all, "3096")
webpage = read_html(plant_url_all[955])
species_html = html_nodes(webpage, ".detail em")
species = html_text(species_html)
description_html = html_nodes(webpage, ".notestitle+ p")
description = html_text(description_html)
description = gsub("\r\n","",description)
headings_html = html_nodes(webpage, ".attrtitle")
headings = html_text(headings_html)
headings = str_trim(headings)
if (headings[length(headings)] == "Indigenous to the Adelaide Region"){
length(headings) = length(headings) -1
}else{
headings = headings
}
data_html = html_nodes(webpage, ".attrvalue")
data = html_text(data_html)
if (data[5] == "Full Sun"|data[5] =="Part Shade"|data[5] =="Full Shade"){
data[3] = str_c(data[c(3,4,5)], collapse = ", ")
data = data[-c(4,5)]
}else if (data[4] == "Full Sun"|data[4] =="Part Shade"|data[4] =="Full Shade"){
data[3] = str_c(data[c(3,4)], collapse = ", ")
data = data[-4]
}else{
data = data
}
dfprep = data.frame(Species = character(length = length(headings)+1),
trait_name = character(length = length(headings)+1),
value = character(length = length(headings)+1))
dfprep[,1] = as.character(species)
dfprep[,2] = c(headings, "description")
dfprep[,3] = c(data, description)
View(dfprep)
View(dfprep)
df = data.frame(Species = character(), trait_name = character(), value = character(), stringsAsFactors = F)
df = data.frame(Species = character(), trait_name = character(), value = character(), stringsAsFactors = F)
for (i in plant_url_all){
webpage = read_html(i)
species_html = html_nodes(webpage, ".detail em")
species = html_text(species_html)
description_html = html_nodes(webpage, ".notestitle+ p")
description = html_text(description_html)
description = gsub("\r\n","",description)
# added in a clause for cases where no description exists
headings_html = html_nodes(webpage, ".attrtitle")
headings = html_text(headings_html)
headings = str_trim(headings)
if (headings[length(headings)] == "Indigenous to the Adelaide Region"){
length(headings) = length(headings) -1
}else{
headings = headings
}
data_html = html_nodes(webpage, ".attrvalue")
data = html_text(data_html)
if (data[5] == "Full Sun"|data[5] =="Part Shade"|data[5] =="Full Shade"){
data[3] = str_c(data[c(3,4,5)], collapse = ", ")
data = data[-c(4,5)]
}else if (data[4] == "Full Sun"|data[4] =="Part Shade"|data[4] =="Full Shade"){
data[3] = str_c(data[c(3,4)], collapse = ", ")
data = data[-4]
}else{
data = data
}
# create a temporary dataframe for each species
dfprep = data.frame(Species = character(length = length(headings)+1),
trait_name = character(length = length(headings)+1),
value = character(length = length(headings)+1))
# assemble into df
dfprep[,1] = as.character(species)
dfprep[,2] = c(headings, "description")
dfprep[,3] = c(data, description)
df = rbind(df, dfprep)
}
View(dfprep)
data_html = html_nodes(webpage, ".attrvalue")
data = html_text(data_html)
if (str_detect("Full Sun", data) == T & str_detect("Part Shade", data) == T & str_detect("Full Shade", data) == T){
a = data[str_which("Full Sun", data)]
b = data[str_which("Part Shade", data)]
c = data[str_which("Full Shade", data)]
data[min(c(a, b, c))] = str_c(data[c(a,b,c), collapse = ", "])
}
str_detect("Full Sun", data)
if (str_which("Full Sun", data) > 0 & str_detect("Part Shade", data) > 0 & str_detect("Full Shade", data) > 0){
a = data[str_which("Full Sun", data)]
b = data[str_which("Part Shade", data)]
c = data[str_which("Full Shade", data)]
data[min(c(a, b, c))] = str_c(data[c(a,b,c), collapse = ", "])
}
str_which("Full Sun", data) > 0
str_which("Full Sun", data)
if (str_count("Full Sun", data) == 1 & str_count("Part Shade", data) == 1 & str_count("Full Shade", data) == 1){
a = data[str_which("Full Sun", data)]
b = data[str_which("Part Shade", data)]
c = data[str_which("Full Shade", data)]
data[min(c(a, b, c))] = str_c(data[c(a,b,c), collapse = ", "])
}
str_count("Full Sun", data)
grep("Full Sun", data)
str_which("Full Sun", data)
grepl("Full Sun", data)
grepl("Full Sun", data) > 1) == T
(grepl("Full Sun", data) > 1) == T
grepl("Full Sun", data) > 1
str_which("Full Sun", data) > 1
data_html = html_nodes(webpage, ".attrvalue")
data = html_text(data_html)
if ((str_which("Full Sun", data) > 1) == T & (str_which("Part Shade", data) > 1) == T & (str_which("Full Shade", data) > 1) == T){
a = data[str_which("Full Sun", data)]
b = data[str_which("Part Shade", data)]
c = data[str_which("Full Shade", data)]
data[min(c(a, b, c))] = str_c(data[c(a,b,c), collapse = ", "])
}
str_which("Full Sun", data) > 1) == T
(str_which("Full Sun", data) > 1) == T
(str_which("Part Shade", data) > 1) == T
data
str_which("Part Shade", data)
str_which(data, "Part Shade")
if ((str_which(data, "Full Sun") > 1) == T & (str_which(data, "Part Shade") > 1) == T & (str_which(data, "Full Shade") > 1) == T){
a = data[str_which("Full Sun", data)]
b = data[str_which("Part Shade", data)]
c = data[str_which("Full Shade", data)]
data[min(c(a, b, c))] = str_c(data[c(a,b,c)], collapse = ", "])
}
data_html = html_nodes(webpage, ".attrvalue")
data = html_text(data_html)
if ((str_which(data, "Full Sun") > 1) == T & (str_which(data, "Part Shade") > 1) == T & (str_which(data, "Full Shade") > 1) == T){
a = data[str_which("Full Sun", data)]
b = data[str_which("Part Shade", data)]
c = data[str_which("Full Shade", data)]
data[min(c(a, b, c))] = str_c(data[c(a,b,c)], collapse = ", ")
}
str_which(data, "Part Shade") > 1
str_which(data, "Full Shade") > 1
str_which(data, "Full Shade")
setwd("C:/Users/MQ20182357/OneDrive - Macquarie University/The database/Scraped data/Riyadh")
library(readr)
Riyadh <- read_csv("Riyadh.csv")
View(Riyadh)
# Set the working directory ot Riyadh and import Riyadh.csv
unique(Riyadh$trait_name)
# the \\1 stands for what is in bracket one. Incredible!  so replace Toxicity and anyhing after it with toxicity
Riyadh$trait_name = gsub("(Toxicity).*", "\\1", Riyadh$trait_name)
unique(Riyadh$trait_name)
library(tidyverse)
# Now get rid of the funny symbols.
library(stringr)
x2[lengths(x2) == 0] <- NA_character_
# x2 = gsub(" ", "5", ACTplantselector$Common_name)
x2 = str_match_all(Riyadh$value, "[[:alnum:]|[:blank:]|[:punct:]]" )
z = character()
for (i in 1:length(Riyadh$value) ){
y = str_c(x2[[i]], collapse = "")
z =  append(z, y)
}
Riyadh$value = z
# Set the working directory ot Riyadh and import Riyadh.csv
unique(Riyadh$trait_name)
# the \\1 stands for what is in bracket one. Incredible!  so replace Toxicity and anyhing after it with toxicity
Riyadh$trait_name = gsub("(Toxicity).*", "\\1", Riyadh$trait_name)
unique(Riyadh$trait_name)
library(tidyverse)
# Now get rid of the funny symbols.
library(stringr)
# x2 = gsub(" ", "5", ACTplantselector$Common_name)
x2 = str_match_all(Riyadh$value, "[[:alnum:]|[:blank:]|[:punct:]]" )
x2[lengths(x2) == 0] <- NA_character_
z = character()
for (i in 1:length(Riyadh$value) ){
y = str_c(x2[[i]], collapse = "")
z =  append(z, y)
}
Riyadh$value = z
#and for species
x2 = str_match_all(Riyadh$species, "[[:alnum:]|[:blank:]|[:punct:]]" )
x2[lengths(x2) == 0] <- NA_character_
z = character()
for (i in 1:length(Riyadh$species) ){
y = str_c(x2[[i]], collapse = "")
z =  append(z, y)
}
Riyadh$species = z
#Now we chase down the syn. and the var.
unique(Riyadh$species[str_which(Riyadh$species, "var\\.")])
Riyadh$species = gsub(" var\\.", "",Riyadh$species)
unique(Riyadh$species[str_which(Riyadh$species, "syn")])
RIYv1 = Riyadh
unique(RIYv1$trait_name)
# 1. Family Name
RIYv1[RIYv1$trait_name == "Family Name",]$trait_name = "family"
#2. Origin
unique(RIYv1[RIYv1$trait_name == "Origin",]$value)
OR = RIYv1[RIYv1$trait_name == "Origin",]
OR = separate(OR, col = value, into = c("generic", "generic1", "generic2", "generic3","generic4", "generic5", "generic6", "generic7"), sep = ", ")
OR = OR %>% gather(key = "trait_name", value = "value", generic:generic7, na.rm = T)
OR$value = str_trim(OR$value)
unique(OR$value)
OR$value = str_to_lower(OR$value)
OR$value = gsub(" ", "", OR$value)
OR$trait_name = "climate_of_origin"
RIYv1 = rbind(RIYv1[!RIYv1$trait_name == "Origin",], OR)
# 3. Rainfall
# Gonna add these into climate of origin
unique(RIYv1[RIYv1$trait_name == "Rainfall",]$value)
Rain = RIYv1[RIYv1$trait_name == "Rainfall",]
Rain = separate(Rain, col = value, into = c("generic", "generic1", "generic2", "generic3","generic4", "generic5", "generic6", "generic7"), sep = ", ")
Rain = Rain %>% gather(key = "trait_name", value = "value", generic:generic7, na.rm = T)
Rain$value = str_trim(Rain$value)
Rain$value = str_to_lower(Rain$value)
Rain = Rain[!Rain$value == "u0631u0637u0628u0629",]
Rain[Rain$value == "extremely arid",]$value = "arid"
Rain[Rain$value == "very arid",]$value = "arid"
Rain[Rain$value == "extremely humid",]$value = "tropical"
Rain[Rain$value == "very humid",]$value = "tropical"
Rain[Rain$value == "semi humid",]$value = "subtropical"
Rain[Rain$value == "semi arid",]$value = "semiarid"
unique(Rain$value)
Rain$trait_name = "climate_of_origin"
RIYv1 = rbind(RIYv1[!RIYv1$trait_name == "Rainfall",], Rain)
# 4. Propagation - get rid of it
unique(RIYv1[RIYv1$trait_name == "Propagation",]$value)
RIYv1 =     RIYv1[!RIYv1$trait_name == "Propagation",]
# 5. Maintenance
unique(RIYv1[RIYv1$trait_name == "Maintenance",]$value)
RIYv1$value[RIYv1$value == "Moderate"] = "Medium"
RIYv1$value[RIYv1$value == "Moderate, Low"] = "Medium"
RIYv1[RIYv1$trait_name == "Maintenance",]$trait_name = "maintenance_level"
# 6. Urban Climate
unique(RIYv1[RIYv1$trait_name == "Urban Climate",]$value)
heat = RIYv1[RIYv1$trait_name == "Urban Climate",]
heat$trait_name = "heat_tolerance"
heat[heat$value == "Resistant",]$value = "Yes"
heat[heat$value == "Vulnerable",]$value = "No"
# 7. Dessication
unique(RIYv1[RIYv1$trait_name == "Desiccation",]$value)
sdrought = RIYv1[RIYv1$trait_name == "Urban Climate",]
sdrought$trait_name = "severedrought_tolerance"
sdrought[sdrought$value == "Resistant",]$value = "Yes"
sdrought[sdrought$value == "Vulnerable",]$value = "No"
# 8. Drought
unique(RIYv1[RIYv1$trait_name == "Drought",]$value)
drought = RIYv1[RIYv1$trait_name == "Drought",]
drought$trait_name = "drought_tolerance"
drought[drought$value == "Resistant",]$value = "Yes"
drought[drought$value == "Vulnerable",]$value = "No"
RIYv1 = rbind(RIYv1[!RIYv1$trait_name == "Urban Climate",], heat)
RIYv1 = rbind(RIYv1[!RIYv1$trait_name == "Desiccation",], sdrought)
RIYv1 = rbind(RIYv1[!RIYv1$trait_name == "Drought",], drought)
# 9. Irrigation - need to split but should be easy
unique(RIYv1[RIYv1$trait_name == "Irrigation",]$value)
Irr = RIYv1[RIYv1$trait_name == "Irrigation",]
Irr = separate(Irr, col = value, into = c("generic", "generic1", "generic2", "generic3","generic4", "generic5", "generic6", "generic7"), sep = ", ")
Irr = Irr %>% gather(key = "trait_name", value = "value", generic:generic7, na.rm = T)
Irr$value = str_trim(Irr$value)
Irr$value = str_to_lower(Irr$value)
unique(Irr$value)
RIYv1 = rbind(RIYv1[!RIYv1$trait_name == "Irrigation",], Irr)
# 10. Salinity
unique(RIYv1[RIYv1$trait_name == "Salinity",]$value)
Sal = RIYv1[RIYv1$trait_name == "Salinity",]
Sal$value[which(Sal$value == "Low  1,000 ppm")] = "No"
Sal$value[which(Sal$value == "Moderate  3,000 ppm")] = "No"
Sal$value[which(Sal$value == "High  5,000 ppm")] = "Yes"
Sal$value[which(Sal$value == "Very High  5,000 ppm")] = "Yes"
Sal$trait_name = "salinity_tolerance"
RIYv1 = rbind(RIYv1[!RIYv1$trait_name == "Salinity",], Sal)
# 11. Hardiness Zones
unique(RIYv1[RIYv1$trait_name == "Hardiness Zones",]$value)
frost = RIYv1[RIYv1$trait_name == "Hardiness Zones",]
frost$trait_name = "frost_tolerance"
frost$value[which(frost$value == "6C")] = "No"
frost$value[which(frost$value == "3C")] = "No"
frost$value[which(frost$value == "-35C")] = "Yes"
frost$value[which(frost$value == "-25C")] = "Yes"
frost$value[which(frost$value == "-15C")] = "Yes"
frost$value[which(frost$value == "-21C")] = "Yes"
frost$value[which(frost$value == "-18C")] = "Yes"
frost$value[which(frost$value == "-12C")] = "Yes"
frost$value[which(frost$value == "-9C")] = "Yes"
frost$value[which(frost$value == "-25C , Heat Tolerant")] = "Yes"
frost$value
lfrost = frost[which(frost$value == "-6C"|frost$value == "-3C"|frost$value == "0C"),]
lfrost$value = "Yes"
lfrost$trait_name = "lightfrost_tolerance"
frost = frost[!which(frost$value == "-6C"|frost$value == "-3C"|frost$value == "0C"),]
frost = frost[-which(frost$value == "-6C"|frost$value == "-3C"|frost$value == "0C"),]
frost = RIYv1[RIYv1$trait_name == "Hardiness Zones",]
frost$trait_name = "frost_tolerance"
frost$value[which(frost$value == "6C")] = "No"
frost$value[which(frost$value == "3C")] = "No"
frost$value[which(frost$value == "-35C")] = "Yes"
frost$value[which(frost$value == "-25C")] = "Yes"
frost$value[which(frost$value == "-15C")] = "Yes"
frost$value[which(frost$value == "-21C")] = "Yes"
frost$value[which(frost$value == "-18C")] = "Yes"
frost$value[which(frost$value == "-12C")] = "Yes"
frost$value[which(frost$value == "-9C")] = "Yes"
frost$value[which(frost$value == "-25C , Heat Tolerant")] = "Yes"
frost$value
lfrost = frost[which(frost$value == "-6C"|frost$value == "-3C"|frost$value == "0C"),]
lfrost$value = "Yes"
lfrost$trait_name = "lightfrost_tolerance"
frost = frost[which(frost$value =! "-6C"|frost$value =! "-3C"|frost$value =! "0C"),]
frost = frost[which(frost$value != "-6C"|frost$value != "-3C"|frost$value != "0C"),]
frost = frost[which(frost$value == "Yes"|frost$value == "No"),]
RIYv1 = rbind(RIYv1[!RIYv1$trait_name == "Hardiness Zones",], frost, lfrost)
# 12. Vigour
unique(RIYv1[RIYv1$trait_name == "Vigour",]$value)
grate = RIYv1[RIYv1$trait_name == "Vigour",]
grate = separate(grate, col = value, into = c("generic", "generic1", "generic2", "generic3","generic4", "generic5", "generic6", "generic7"), sep = ", ")
grate = grate %>% gather(key = "trait_name", value = "value", generic:generic7, na.rm = T)
grate$value = str_trim(grate$value)
grate$value = str_to_lower(grate$value)
unique(grate$value)
grate$value[which(grate$value == "normal growth rate")] = "medium"
grate$value[which(grate$value == "fairly fast growing")] = "fast"
grate$value[which(grate$value == "fast growing")] = "fast"
grate$value[which(grate$value == "slow growing")] = "slow"
grate$value[which(grate$value == "very slow growing")] = "slow"
grate$trait_name = "growth_rate"
RIYv1 = rbind(RIYv1[!RIYv1$trait_name == "Vigour",], grate)
# 13. Height
unique(RIYv1[RIYv1$trait_name == "Height",]$value)
height = RIYv1[RIYv1$trait_name == "Height",]
height1 = height[grepl("To", height$value) == F,]
height1$value = as.numeric(gsub("[[:alpha:]]", "", height1$value))
height1$value = str_trim(height1$value)
height1$trait_name = "height"
#wow all of them!
height = height[grepl("To", height$value) == T,]
height = separate(height, col = value, into = c("min_height", "max_height"), sep = "To")
height = height %>% gather(key = "trait_name", value = "value", min_height:max_height, na.rm = T)
height$value = as.numeric(gsub("[[:alpha:]]", "", height$value))
height$value = str_trim(height$value)
RIYv1 = rbind(RIYv1[!RIYv1$trait_name == "Height",], height, height1)
# 14. Expansion
width = RIYv1[RIYv1$trait_name == "Expansion",]
width1 = width[grepl("To", width$value) == F,]
width1$value = as.numeric(gsub("[[:alpha:]]", "", width1$value))
width1$value = str_trim(width1$value)
width1$trait_name = "width"
#wow all of them!
width = width[grepl("To", width$value) == T,]
width = separate(width, col = value, into = c("min_width", "max_width"), sep = "To")
width = width %>% gather(key = "trait_name", value = "value", min_width:max_width, na.rm = T)
width$value = as.numeric(gsub("[[:alpha:]]", "", width$value))
width$value = str_trim(width$value)
RIYv1 = rbind(RIYv1[!RIYv1$trait_name == "Expansion",], width, width1)
# 15. Foliage - need to expand out
unique(RIYv1[RIYv1$trait_name == "Foliage",]$value)
Foliage = RIYv1[RIYv1$trait_name == "Foliage",]
Foliage = separate(Foliage, col = value, into = c("generic", "generic1", "generic2", "generic3","generic4", "generic5", "generic6", "generic7"), sep = ", ")
Foliage = Foliage %>% gather(key = "trait_name", value = "value", generic:generic7, na.rm = T)
Foliage$value = str_trim(Foliage$value)
Foliage$value = str_to_lower(Foliage$value)
unique(Foliage$value)
Foliage$value[which(Foliage$value == "semi evergreen")] = "semi_decidious"
Foliage$trait_name = "leaf_loss"
RIYv1 = rbind(RIYv1[!RIYv1$trait_name == "Foliage",], Foliage)
# 16. Colour (Flower I'm pretty sure) - expand
unique(RIYv1[RIYv1$trait_name == "Colour",]$value)
Colour = RIYv1[RIYv1$trait_name == "Colour",]
Colour = separate(Colour, col = value, into = c("generic", "generic1", "generic2", "generic3","generic4", "generic5", "generic6", "generic7"), sep = ", ")
Colour = Colour %>% gather(key = "trait_name", value = "value", generic:generic7, na.rm = T)
Colour$value = str_trim(Colour$value)
Colour$value = str_to_lower(Colour$value)
unique(Colour$value)
Colour$trait_name = "flower_colour"
# take out everything after the space
Colour$value = gsub("\\s.*", "", Colour$value)
RIYv1 = rbind(RIYv1[!RIYv1$trait_name == "Colour",], Colour)
# 17. Size of flower take this one out
unique(RIYv1[RIYv1$trait_name == "Size",]$value)
RIYv1 = RIYv1[!RIYv1$trait_name == "Size",]
# 18. Flower Period - take this out. The Riyadh climate won't be relevant for us
unique(RIYv1[RIYv1$trait_name == "Flowering Period",]$value)
RIYv1 = RIYv1[!RIYv1$trait_name == "Flowering Period",]
# 19. Smell - simplify to fragrant and fragrant foliage
unique(RIYv1[RIYv1$trait_name == "Smell",]$value)
Smell = RIYv1[RIYv1$trait_name == "Smell",]
Smell = separate(Smell, col = value, into = c("generic", "generic1", "generic2", "generic3","generic4", "generic5", "generic6", "generic7"), sep = ", ")
Smell = Smell %>% gather(key = "trait_name", value = "value", generic:generic7, na.rm = T)
Smell$value = str_trim(Smell$value)
Smell$value = str_to_lower(Smell$value)
unique(Smell$value)
Smell$trait_name = "other_feature"
Smell$value[Smell$value == "flower"] = "fragrant_flower"
Smell$value[Smell$value == "leaf"] = "fragrant_foliage"
Smell[Smell$value == "maloderous",]$trait_name = "risk"
RIYv1 = rbind(RIYv1[!RIYv1$trait_name == "Smell",], Smell)
View(Smell)
Smell[Smell$value == "malodorous",]$trait_name = "risk"
# 20. Type Of Fruit - will take some cleaning
unique(RIYv1[RIYv1$trait_name == "Type Of Fruit",]$value)
fruit = RIYv1[RIYv1$trait_name == "Type Of Fruit",]
fruit$value = str_to_lower(fruit$value)
fruit$value[fruit$value == "berry"] = "berries"
fruit$value[fruit$value == "nutlet , cones"] = "cone"
fruit$value[fruit$value == "drupe(fleshy/juicy)"] = "drupe"
fruit$value[fruit$value == "cones"] = "cone"
fruit$value[fruit$value == "nutlet , loment"] = "nutlet"
fruit$value[fruit$value == "cones"] = "cone"
fruit$value[fruit$value == "drupe (leathery/fibrous)"] = "drupe"
fruit =fruit[!fruit$value == "schizocarp",]
fruit =fruit[!fruit$value == "silique",]
fruit = fruit[!fruit$value == "star shaped fruit",]
unique(fruit$value)
RIYv1 = rbind(RIYv1[!RIYv1$trait_name == "Type Of Fruit",], fruit)
# 21. Location of Use - Placement - needs expanding
unique(RIYv1[RIYv1$trait_name == "Location of Use",]$value)
placement = RIYv1[RIYv1$trait_name == "Location of Use",]
placement = separate(placement, col = value, into = c("generic", "generic1", "generic2", "generic3","generic4", "generic5", "generic6", "generic7"), sep = ", ")
placement = placement %>% gather(key = "trait_name", value = "value", generic:generic7, na.rm = T)
placement = RIYv1[RIYv1$trait_name == "Location of Use",]
placement = separate(placement, col = value, into = c("generic", "generic1", "generic2", "generic3","generic4", "generic5", "generic6", "generic7", "generic8", "generic9", "generic10"), sep = ", ")
placement = placement %>% gather(key = "trait_name", value = "value", generic:generic10, na.rm = T)
placement = RIYv1[RIYv1$trait_name == "Location of Use",]
placement = separate(placement, col = value, into = c("generic", "generic1", "generic2", "generic3","generic4", "generic5", "generic6", "generic7", "generic8", "generic9", "generic10", "generic11", "generic12", "generic13", "generic14"), sep = ", ")
placement = RIYv1[RIYv1$trait_name == "Location of Use",]
placement = separate(placement, col = value, into = c("generic", "generic1", "generic2", "generic3","generic4", "generic5", "generic6", "generic7", "generic8", "generic9", "generic10", "generic11", "generic12", "generic13", "generic14", "generic15", "generic16", "generic17"), sep = ", ")
placement = placement %>% gather(key = "trait_name", value = "value", generic:generic18, na.rm = T)
placement = placement %>% gather(key = "trait_name", value = "value", generic:generic17, na.rm = T)
placement$value = str_trim(placement$value)
placement$value = str_to_lower(placement$value)
unique(placement$value)
placement$value[placement$vale == "open country"]
placement$value[placement$value == "open country"]
placement[placement$value == "open country",]
placement$species[placement$value == "pedestrian precinct"]
placement$species[placement$value == "swimming pool planting"]
unique(placement$value)
placement$species[placement$value == "undergrowth"]
unique(placement$value)
placement$value[placement$value == "private garden"] = "garden"
# 22. Other choices - purpose - needs expanding
unique(RIYv1[RIYv1$trait_name == "Other choices",]$value)
purpose = RIYv1[RIYv1$trait_name == "Other choices",]
purpose = separate(purpose, col = value, into = c("generic", "generic1", "generic2", "generic3","generic4", "generic5", "generic6", "generic7"), sep = ", ")
purpose = purpose %>% gather(key = "trait_name", value = "value", generic:generic7, na.rm = T)
purpose = RIYv1[RIYv1$trait_name == "Other choices",]
purpose = separate(purpose, col = value, into = c("generic", "generic1", "generic2", "generic3","generic4", "generic5", "generic6", "generic7", "generic8", "generic9", "generic10", "generic11", "generic12", "generic13", "generic14", "generic15", "generic16", "generic17"), sep = ", ")
purpose = purpose %>% gather(key = "trait_name", value = "value", generic:generic17, na.rm = T)
purpose$value = str_trim(purpose$value)
purpose$value = str_to_lower(purpose$value)
unique(purpose$value)
